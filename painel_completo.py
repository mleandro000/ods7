# Arquivo: painel_completo.py
# Respons√°vel por ler o arquivo local e exibir o dashboard interativo.

# ==============================================================================
# 1. IMPORTS E CONFIGURA√á√ïES
# ==============================================================================
import streamlit as st
import pandas as pd
import os
import plotly.express as px
import plotly.graph_objects as go

# --- Constantes e Configura√ß√£o da P√°gina ---
CONSOLIDATED_FILE = "balanco_energia_consolidado.parquet"
st.set_page_config(layout="wide", page_title="An√°lise Energ√©tica do Brasil", page_icon="üáßüá∑")

# ==============================================================================
# 2. CARREGAMENTO E PREPARA√á√ÉO DE DADOS
# ==============================================================================
@st.cache_data
def load_and_prepare_data():
    """L√™ o arquivo local e prepara todos os DataFrames para as an√°lises."""
    df = pd.read_parquet(CONSOLIDATED_FILE)
    df['ano'] = pd.to_datetime(df['din_instante']).dt.year

    # Prepara dados do SIN
    df_sin = df[df['nom_subsistema'] == 'SISTEMA INTERLIGADO NACIONAL'].copy()
    fontes_renovaveis = ['val_gerhidraulica', 'val_gereolica', 'val_gersolar']
    df_sin['geracao_renovavel'] = df_sin[fontes_renovaveis].sum(axis=1)
    df_sin['geracao_total'] = df_sin['geracao_renovavel'] + df_sin['val_gertermica']

    # Agrega√ß√£o Anual Nacional
    analise_nacional_anual = df_sin.groupby('ano').agg(
        total_geral_brasil=('geracao_total', 'sum'),
        total_renovavel_brasil=('geracao_renovavel', 'sum'),
        Hidraulica=('val_gerhidraulica', 'sum'),
        Termica=('val_gertermica', 'sum'),
        Eolica=('val_gereolica', 'sum'),
        Solar=('val_gersolar', 'sum')
    ).reset_index()

    # Prepara An√°lise Regional
    df_regional = df[df['nom_subsistema'] != 'SISTEMA INTERLIGADO NACIONAL'].copy()
    df_regional['geracao_renovavel'] = df_regional[fontes_renovaveis].sum(axis=1)
    df_regional['geracao_total'] = df_regional['geracao_renovavel'] + df_regional['val_gertermica']
    
    analise_regional_anual = df_regional.groupby(['ano', 'nom_subsistema']).agg(
        geracao_renovavel_regiao=('geracao_renovavel', 'sum'),
        geracao_total_regiao=('geracao_total', 'sum')
    ).reset_index()
    
    # An√°lise Relativa: % de renov√°veis DENTRO da pr√≥pria regi√£o
    mask = analise_regional_anual['geracao_total_regiao'] > 0
    analise_regional_anual['perc_renovavel_interno'] = 0.0
    analise_regional_anual.loc[mask, 'perc_renovavel_interno'] = (analise_regional_anual.loc[mask, 'geracao_renovavel_regiao'] / analise_regional_anual.loc[mask, 'geracao_total_regiao']) * 100

    # An√°lise Absoluta: Contribui√ß√£o de cada regi√£o para o total de energia renov√°vel do BRASIL
    analise_final_regional = pd.merge(analise_regional_anual, analise_nacional_anual[['ano', 'total_renovavel_brasil']], on='ano')
    analise_final_regional['contribuicao_perc_nacional'] = ((analise_final_regional['geracao_renovavel_regiao'] / analise_final_regional['total_renovavel_brasil']) * 100)
    
    # Prepara dados di√°rios
    df_diario = df_sin.set_index('din_instante')[['val_gerhidraulica', 'val_gertermica', 'val_gereolica', 'val_gersolar']].resample('D').sum()
    df_diario.columns = ['Hidr√°ulica', 'T√©rmica', 'E√≥lica', 'Solar']
    
    return analise_nacional_anual, analise_final_regional, df_diario

# ==============================================================================
# 3. FUN√á√ïES DE PLOTAGEM
# ==============================================================================
def plot_matriz_energetica(df_anual):
    """Cria o gr√°fico de barras empilhadas da matriz energ√©tica anual."""
    df_plot = df_anual.set_index('ano')[['Hidraulica', 'Termica', 'Eolica', 'Solar']]
    fig = px.bar(df_plot, y=df_plot.columns, title='Composi√ß√£o da Matriz Energ√©tica por Fonte')
    fig.update_layout(barmode='stack', xaxis_title='Ano', yaxis_title='Gera√ß√£o (MWMED Somado)')
    return fig

def plot_analise_regional_relativa(df_regional):
    """Cria o gr√°fico da participa√ß√£o renov√°vel DENTRO de cada subsistema, com eixos corrigidos."""
    fig = px.line(
        df_regional, x='ano', y='perc_renovavel_interno',
        facet_col='nom_subsistema', facet_col_wrap=2,
        color='nom_subsistema', markers=True, height=700,
        title='An√°lise Relativa: % de Renov√°veis na Matriz de CADA Subsistema'
    )
    fig.for_each_xaxis(lambda axis: axis.update(showticklabels=True, title='Ano'))
    fig.for_each_yaxis(lambda axis: axis.update(showticklabels=True, title='% Renov√°vel Interno'))
    fig.update_layout(showlegend=False)
    return fig

def plot_analise_regional_absoluta(df_regional):
    """Cria o gr√°fico da contribui√ß√£o absoluta de cada subsistema para o total de energia renov√°vel do Brasil."""
    fig = px.bar(
        df_regional, x='ano', y='geracao_renovavel_regiao',
        color='nom_subsistema', title='An√°lise Absoluta: Contribui√ß√£o de Cada Subsistema para a Gera√ß√£o Renov√°vel do Brasil (MWMED)',
        labels={'ano': 'Ano', 'geracao_renovavel_regiao': 'Gera√ß√£o Renov√°vel (MWMED)', 'nom_subsistema': 'Subsistema'}
    )
    fig.update_layout(barmode='stack')
    return fig

def plot_serie_diaria(df_diario):
    """Cria o gr√°fico de S√©rie Di√°ria com M√©dias M√≥veis."""
    fig = go.Figure()
    cores = {'Hidr√°ulica': 'blue', 'T√©rmica': 'red', 'E√≥lica': 'green', 'Solar': 'orange'}
    for fonte in df_diario.columns:
        media_30d = df_diario[fonte].rolling(window=30).mean()
        media_90d = df_diario[fonte].rolling(window=90).mean()
        fig.add_trace(go.Scatter(x=df_diario.index, y=df_diario[fonte], mode='lines', name=fonte, legendgroup=fonte, line=dict(width=1), opacity=0.3, marker_color=cores[fonte]))
        fig.add_trace(go.Scatter(x=df_diario.index, y=media_30d, mode='lines', name=f'{fonte} M√©dia 30d', legendgroup=fonte, line=dict(width=2), marker_color=cores[fonte]))
        fig.add_trace(go.Scatter(x=df_diario.index, y=media_90d, mode='lines', name=f'{fonte} M√©dia 90d', legendgroup=fonte, line=dict(width=2, dash='dash'), marker_color=cores[fonte]))
    fig.update_layout(height=700, title_text='<b>Gera√ß√£o Di√°ria com Tend√™ncias de M√©dias M√≥veis</b>', legend_title='<b>Fonte e Tend√™ncia</b>', xaxis_rangeslider_visible=True)
    return fig

# ==============================================================================
# 4. INTERFACE PRINCIPAL DA APLICA√á√ÉO
# ==============================================================================
def main():
    st.title("üìä An√°lise da Matriz Energ√©tica Brasileira e o ODS 7")

    if not os.path.exists(CONSOLIDATED_FILE):
        st.error(f"ERRO: Arquivo de dados '{CONSOLIDATED_FILE}' n√£o encontrado!")
        st.warning("Por favor, execute o script `python coletar_dados.py` em seu terminal para gerar a base de dados.")
        st.stop()

    analise_nacional, analise_regional, df_diario = load_and_prepare_data()

    st.sidebar.title("Navega√ß√£o")
    page_selection = st.sidebar.radio(
        "Selecione a An√°lise:",
        ("Sum√°rio Executivo", "An√°lise da Matriz Energ√©tica", "An√°lise de Subsistemas", "An√°lise de S√©rie Temporal")
    )

    if page_selection == "Sum√°rio Executivo":
        st.header("Alinhamento da Matriz Energ√©tica Brasileira com o ODS 7")
        st.markdown("""
        O Brasil possui uma posi√ß√£o de destaque global com sua matriz energ√©tica predominantemente renov√°vel. O **Objetivo de Desenvolvimento Sustent√°vel (ODS) 7** da ONU visa "assegurar o acesso confi√°vel, sustent√°vel, moderno e a pre√ßo acess√≠vel √† energia para todas e todos". 
        
        Este painel explora os dados de gera√ß√£o do Operador Nacional do Sistema El√©trico (ONS) para contextualizar o progresso do Brasil em rela√ß√£o a esta meta, com foco na diversifica√ß√£o, resili√™ncia e nas particularidades regionais.
        """)
        st.info("Utilize o menu na barra lateral para navegar entre as diferentes se√ß√µes da an√°lise.")

    elif page_selection == "An√°lise da Matriz Energ√©tica":
        st.header("Composi√ß√£o da Matriz Energ√©tica Nacional (SIN)")
        st.markdown("""
        **Motiva√ß√£o:** Entender a contribui√ß√£o de cada fonte de energia (Hidr√°ulica, T√©rmica, E√≥lica, Solar) para a gera√ß√£o total do Sistema Interligado Nacional.
        **An√°lise:** O gr√°fico de barras empilhadas ilustra a forte depend√™ncia hist√≥rica da fonte h√≠drica, o papel complementar da gera√ß√£o t√©rmica (frequentemente acionada para seguran√ßa do sistema) e, mais importante, a ascens√£o clara e exponencial das fontes e√≥lica e solar na √∫ltima d√©cada, diversificando a matriz.
        """)
        st.info("üéØ **Alinhamento Principal: ODS 7.2** (Manter elevada a participa√ß√£o de renov√°veis).")
        figura_matriz = plot_matriz_energetica(analise_nacional)
        st.plotly_chart(figura_matriz, use_container_width=True)

    elif page_selection == "An√°lise de Subsistemas":
        st.header("An√°lise Regional por Subsistemas")
        st.markdown("""
        O Brasil √© dividido em 4 subsistemas operacionais (SE/CO, Sul, NE, Norte) com realidades energ√©ticas muito distintas. Analis√°-los separadamente √© crucial para entender os desafios e oportunidades de cada regi√£o.
        """)
        
        st.subheader("Vis√£o 1: Composi√ß√£o Interna de Cada Regi√£o")
        st.markdown("""
        Este primeiro gr√°fico responde: **"Dentro de cada regi√£o, qual a porcentagem de energia gerada que √© renov√°vel?"**. Ele mostra o qu√£o "verde" √© a matriz de cada subsistema.
        """)
        st.info("üéØ **Alinhamento Principal: ODS 7.1** (Acesso universal e equidade regional).")
        fig_relativa = plot_analise_regional_relativa(analise_regional)
        st.plotly_chart(fig_relativa, use_container_width=True)

        st.markdown("---")

        st.subheader("Vis√£o 2: Contribui√ß√£o de Cada Regi√£o para o Total Renov√°vel do Brasil")
        st.markdown("""
        Este segundo gr√°fico responde √† pergunta mais profunda: **"Do total de energia renov√°vel gerado no Brasil, qual a contribui√ß√£o (o 'peso') de cada regi√£o?"**. Aqui vemos a import√¢ncia absoluta de cada subsistema. Por exemplo, o Nordeste n√£o s√≥ tem uma matriz interna muito renov√°vel, como tamb√©m √© um contribuinte massivo para o total de energia limpa do pa√≠s, gra√ßas √† sua for√ßa e√≥lica.
        """)
        st.info("üéØ **Alinhamento Principal: ODS 7.b** (Expans√£o de infraestrutura para integra√ß√£o nacional).")
        fig_absoluta = plot_analise_regional_absoluta(analise_regional)
        st.plotly_chart(fig_absoluta, use_container_width=True)

    elif page_selection == "An√°lise de S√©rie Temporal":
        st.header("An√°lise de Tend√™ncias Di√°rias com M√©dias M√≥veis")
        with st.expander("Clique aqui para entender as M√©dias M√≥veis e como interpretar este gr√°fico"):
            st.markdown("""
                **A Motiva√ß√£o:** Dados di√°rios s√£o "ruidosos". As **M√©dias M√≥veis (MM)** filtram essa volatilidade para revelar a tend√™ncia real.
                
                **Como Ler as Linhas:**
                - **Dado Di√°rio (√Årea Sombreada):** A gera√ß√£o real de cada dia. Mostra a volatilidade.
                - **M√©dia M√≥vel de 30 dias (Linha S√≥lida):** Revela a tend√™ncia mensal e a "dan√ßa" sazonal entre a gera√ß√£o **Hidr√°ulica** e a **T√©rmica**.
                - **M√©dia M√≥vel de 90 dias (Linha Tracejada):** Mostra a tend√™ncia de longo prazo, confirmando a ascens√£o estrutural da **E√≥lica** e **Solar** ao longo dos anos.
            """)
        
        fig_diario = plot_serie_diaria(df_diario)
        st.plotly_chart(fig_diario, use_container_width=True)

if __name__ == "__main__":
    main()